/*
 * pomdp-solve
 *
 * Copyright © 1998-2003, Anthony R. Cassandra
 * Copyright © 1994-1997, Brown University
 *
 * Licensed under the Creative Commons Attribution-NonCommercial 4.0 
 * International License (CC BY-NC 4.0).
 *
 * See the LICENSE.txt file for details.
 */

#ifndef SIGNAL_HANDLER_H
#define SIGNAL_HANDLER_H

#include "params.h"

/*******************************************************************/
/**************             CONSTANTS               ****************/
/*******************************************************************/

/* Defining this constant turns off the memory limit stuff */
#define DISABLE_MEMORY_LIMIT


/*******************************************************************/
/**************       EXTERNAL VARIABLES            ****************/
/*******************************************************************/

extern int gInterrupt;

/*******************************************************************/
/**************       EXTERNAL FUNCTIONS            ****************/
/*******************************************************************/

/* If the -brief option is specified, then we set a timer for the
   maximum number of seconds we will allow the program to run for.  */
extern void setUpIntervalTimer( int secs );

/* Sets the hard virtual memory size limit.  If process exceeds this
   limit, then the SIGSEGV signal will be generated.  We also try to
   catch this signal, but we are carefull not to assume that every
   SIGSEGV is due to resource limitations.  */
extern void setMemoryLimit( int mem_size_limit );

/* Registers the signal handler for the SIGINT signal which is
  generated by pressing CRTL-C.  */
extern void setUpCtrlC(  );

/* Sets the parameter context so that when interrupts are received we
  can look there for information about where the soluton process
  stoppped.  */
extern void setInterruptParamContext( PomdpSolveParams param );
      
#endif
